{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AACA,OAAO,WAAoC,MAAM,cAAc,CAAC;AAEhE,OAAO,SAAS,EAAE,EAAE,eAAe,EAAE,MAAM,IAAI,CAAC;AAkBhD,IAAI,EAAuB,CAAC;AAC5B,IAAI,GAAoB,CAAC;AAEzB,MAAM,iBAAiB,GAAG,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAoB,EAAU,EAAE;IAC/F,OAAO;QACL,IAAI,EAAE,sCAAsC;QAC5C,UAAU;YACR,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,GAAG,EAAE;oBACR,GAAG,GAAG,IAAI,eAAe,CAAC,gBAAgB,CAAC,CAAC;oBAC5C,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,EAAE,CAAC,EAAE;wBACxB,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,uBAAuB,CAAC,CAAC;oBACnE,CAAC,CAAC,CAAC;oBACH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;wBACpB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACjB,CAAC,CAAC,CAAC;oBACH,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,gCAAgC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC;iBAClG;aACF;iBAAM;gBACL,IAAI,CAAC,EAAE,EAAE;oBACP,EAAE,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC;iBAC3B;aACF;QACH,CAAC;QACD,WAAW;YACT,IAAI,SAAS,EAAE;gBACb,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;oBAC3B,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;wBACxC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,wBAAwB,CAAC,CAAC,CAAC;qBACnG;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,EAAE,CAAC,MAAM,EAAE;oBACb,EAAE,CAAC,MAAM,EAAE,CAAC;iBACb;qBAAM;oBACL,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAClB;aACF;QACH,CAAC;KACF,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,iBAAiB,CAAC","sourcesContent":["import type { Plugin } from 'rollup';\nimport browserSync, { BrowserSyncInstance } from 'browser-sync';\nimport type { Options } from 'browser-sync';\nimport WebSocket, { WebSocketServer } from 'ws';\n\ninterface OptionsType {\n  options: Options;\n  extReload?: false;\n  extReloadOptions?: never;\n}\n\ninterface OptionsTypeWithReload {\n  options: Options;\n  extReload: true;\n  extReloadOptions: {\n    port: number;\n  };\n}\n\ntype OptionsTypeFinal = OptionsType | OptionsTypeWithReload;\n\nlet bs: BrowserSyncInstance;\nlet wss: WebSocketServer;\n\nconst browserSyncPlugin = ({ options, extReload, extReloadOptions }: OptionsTypeFinal): Plugin => {\n  return {\n    name: 'rollup-plugin-browser-sync-extension',\n    buildStart() {\n      if (extReload) {\n        if (!wss) {\n          wss = new WebSocketServer(extReloadOptions);\n          wss.on('connection', ws => {\n            ws.on('error', this.warn);\n            console.log('\\x1b[1m\\x1b[32m%s\\x1b[0m', 'Connection Successful');\n          });\n          wss.on('error', err => {\n            this.warn(err);\n          });\n          console.log('\\x1b[1m\\x1b[32m%s\\x1b[0m', `Listen extension reload port ${extReloadOptions.port}`);\n        }\n      } else {\n        if (!bs) {\n          bs = browserSync.create();\n        }\n      }\n    },\n    writeBundle() {\n      if (extReload) {\n        wss.clients.forEach(client => {\n          if (client.readyState === WebSocket.OPEN) {\n            client.send('Reloading', () => console.log('\\x1b[1m\\x1b[32m%s\\x1b[0m', 'Extension Reloading...'));\n          }\n        });\n      } else {\n        if (bs.active) {\n          bs.reload();\n        } else {\n          bs.init(options);\n        }\n      }\n    },\n  };\n};\n\nexport default browserSyncPlugin;\n"]}